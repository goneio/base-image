name: Gone.io Base Images
on:
  push: 
  schedule:
  - cron: 0 4 * * TUE
jobs:
  LintDockerfile:
    runs-on: ubuntu-latest
    name: Lint Dockerfile
    steps:
    - uses: actions/checkout@v1
    - name: Hadolint Core
      run: docker run --rm -i hadolint/hadolint < Dockerfile.Core
    - name: Hadolint Marshall
      run: docker run --rm -i hadolint/hadolint < Dockerfile.Marshall
    - name: Hadolint PHP
      run: docker run --rm -i hadolint/hadolint < Dockerfile.PHP
  Marshall:
    runs-on: ubuntu-latest
    needs:
    - LintDockerfile
    name: Marshall ${{ matrix.platform }} ${{ matrix.registry }}
    strategy:
      matrix:
        platform:
        - x86_64
        - arm64v8
        registry:
        - docker.io/gone
        - docker.pkg.github.com/goneio/base-image
    env:
      BASE_IMAGE_x86_64: ubuntu:bionic
      BASE_IMAGE_arm64v8: arm64v8/ubuntu
    steps:
    - uses: actions/checkout@v1
    - name: Enable multiarch support
      run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - name: Pull base image
      run: docker pull arm64v8/ubuntu || true
    - name: Pull previous build
      run: docker pull ${{ matrix.registry }}/marshall:${{ matrix.platform }} || true
    - name: Setup Marshall
      run: git rev-parse --short HEAD > marshall/marshall_version ; date '+%Y-%m-%d'
        > marshall/marshall_build_date ; hostname > marshall/marshall_build_host
    - name: Build Image ${{ matrix.registry }}/marshall:${{ matrix.platform }}
      run: 'docker build -f Dockerfile.Marshall --target marshall -t ${{ matrix.registry
        }}/marshall:${{ matrix.platform }} --build-arg CORE_FROM=$BASE_IMAGE_${{ matrix.platform
        }} . '
    - name: Push Image ${{ matrix.registry }}/marshall:${{ matrix.platform }}
      run: docker push ${{ matrix.registry }}/marshall:${{ matrix.platform }}
  Core:
    runs-on: ubuntu-latest
    needs:
    - Marshall
    strategy:
      matrix:
        php:
        - "5.6"
        - "7.0"
        - "7.1"
        - "7.2"
        - "7.3"
        - "7.4"
        platform:
        - x86_64
        - arm64v8
        registry:
        - docker.io/gone
        - docker.pkg.github.com/goneio/base-image
    steps:
    - uses: actions/checkout@v1
    - name: Enable multiarch support
      run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - run: echo "::set-output name=php_install_list_envvar::$(echo "PHP_${{ matrix.php
        }}" | sed 's|\.||')"
      id: install_envvar
    - name: Pull base image (marshall)
      run: docker pull ${{ matrix.registry }}/marshall:${{ matrix.platform }} || true
    - name: Pull Previous Image
      run: docker pull ${{ matrix.registry }}/php:core-${{ matrix.php }}-${{ matrix.platform
        }} || true
    - name: Build Image ${{ matrix.registry }}/php:core-${{ matrix.php }}-${{ matrix.platform
        }}
      run: docker build -f Dockerfile.Core --target php-core --build-arg "PHP_VERSION=${{
        matrix.php }}" --build-arg "PHP_PACKAGES=$${{ steps.install_envvar.outputs.php_install_list_envvar
        }}" --build-arg "CORE_FROM=${{ matrix.registry }}/marshall:${{ matrix.platform
        }}" -t ${{ matrix.registry }}/php:core-${{ matrix.php }}-${{ matrix.platform
        }} .
    - name: Push Image ${{ matrix.registry }}/php:core-${{ matrix.php }}-${{ matrix.platform
        }}
      run: docker push ${{ matrix.registry }}/php:core-${{ matrix.php }}-${{ matrix.platform
        }}
    env:
      PHP_56: git mariadb-client php5.6 php5.6-apcu php5.6-bcmath php5.6-bz2 php5.6-cli
        php5.6-curl php5.6-gd php5.6-imap php5.6-intl php5.6-json php5.6-ldap php5.6-mbstring
        php5.6-mcrypt php5.6-memcache php5.6-memcached php5.6-mongodb php5.6-mysql
        php5.6-opcache php5.6-pgsql php5.6-phpdbg php5.6-pspell php5.6-redis php5.6-soap
        php5.6-sqlite php5.6-xdebug php5.6-xml php5.6-zip postgresql-client
      PHP_70: git mariadb-client php7.0 php7.0-apcu php7.0-bcmath php7.0-bz2 php7.0-cli
        php7.0-curl php7.0-gd php7.0-imap php7.0-intl php7.0-json php7.0-ldap php7.0-mbstring
        php7.0-mcrypt php7.0-memcache php7.0-memcached php7.0-mongodb php7.0-mysql
        php7.0-opcache php7.0-pgsql php7.0-phpdbg php7.0-pspell php7.0-redis php7.0-soap
        php7.0-sqlite php7.0-xdebug php7.0-xml php7.0-zip postgresql-client
      PHP_71: git mariadb-client php7.1 php7.1-apcu php7.1-bcmath php7.1-bz2 php7.1-cli
        php7.1-curl php7.1-gd php7.1-imap php7.1-intl php7.1-json php7.1-ldap php7.1-mbstring
        php7.1-mcrypt php7.1-memcache php7.1-memcached php7.1-mongodb php7.1-mysql
        php7.1-opcache php7.1-pgsql php7.1-phpdbg php7.1-pspell php7.1-redis php7.1-soap
        php7.1-sqlite php7.1-xdebug php7.1-xml php7.1-zip postgresql-client
      PHP_72: git mariadb-client php7.2 php7.2-apcu php7.2-bcmath php7.2-bz2 php7.2-cli
        php7.2-curl php7.2-gd php7.2-imap php7.2-intl php7.2-json php7.2-ldap php7.2-mbstring
        php7.2-mcrypt php7.2-memcache php7.2-memcached php7.2-mongodb php7.2-mysql
        php7.2-opcache php7.2-pgsql php7.2-phpdbg php7.2-pspell php7.2-redis php7.2-soap
        php7.2-sqlite php7.2-xdebug php7.2-xml php7.2-zip postgresql-client
      PHP_73: git mariadb-client php-sodium php7.3 php7.3-apcu php7.3-bcmath php7.3-bz2
        php7.3-cli php7.3-curl php7.3-gd php7.3-imap php7.3-intl php7.3-json php7.3-ldap
        php7.3-mbstring php7.3-memcache php7.3-memcached php7.3-mongodb php7.3-mysql
        php7.3-opcache php7.3-pgsql php7.3-phpdbg php7.3-pspell php7.3-redis php7.3-soap
        php7.3-sqlite php7.3-xdebug php7.3-xml php7.3-zip postgresql-client
      PHP_74: git mariadb-client php-sodium php7.4 php7.4-apcu php7.4-bcmath php7.4-bz2
        php7.4-cli php7.4-curl php7.4-gd php7.4-imap php7.4-intl php7.4-json php7.4-ldap
        php7.4-mbstring php7.4-memcache php7.4-memcached php7.4-mongodb php7.4-mysql
        php7.4-opcache php7.4-pgsql php7.4-phpdbg php7.4-pspell php7.4-redis php7.4-soap
        php7.4-sqlite php7.4-xdebug php7.4-xml php7.4-zip postgresql-client
  PHP:
    runs-on: ubuntu-latest
    needs:
    - Core
    strategy:
      matrix:
        php:
        - "5.6"
        - "7.0"
        - "7.1"
        - "7.2"
        - "7.3"
        - "7.4"
        release:
        - apache
        - nginx
        - cli
        platform:
        - x86_64
        - arm64v8
        registry:
        - docker.io/gone
        - docker.pkg.github.com/goneio/base-image
    steps:
    - uses: actions/checkout@v1
    - name: Enable multiarch support
      run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - name: Pull previous build
      run: docker pull ${{ matrix.registry }}/php:${{ matrix.release }}-${{ matrix.php
        }}-${{ matrix.platform }} || true
    - name: Pull base image
      run: docker pull ${{ matrix.registry }}/php:core-${{ matrix.php }}-${{ matrix.platform
        }} || true
    - name: 'Build Image: ${{ matrix.registry }}/php-${{ matrix.platform }}:${{ matrix.release
        }}-${{ matrix.php }}'
      run: docker build -f Dockerfile.PHP --target php-${{ matrix.release }} --build-arg
        "CORE_FROM=${{ matrix.registry }}/php:core-${{ matrix.php }}-${{ matrix.platform
        }}" -t ${{ matrix.registry }}/php:${{ matrix.release }}-${{ matrix.php }}-${{
        matrix.platform }} .
    - name: 'Push Image: ${{ matrix.registry }}/php:${{ matrix.release }}-${{ matrix.php
        }}-${{ matrix.platform }}'
      run: docker push ${{ matrix.registry }}/php:${{ matrix.release }}-${{ matrix.php
        }}-${{ matrix.platform }}
